" ##############################################################################
" .config/vim/vimrc - Vim configuration
"
" author: mutantmonkey <mutantmonkey@gmail.com>
" ##############################################################################

" General Settings {{{

set nocompatible					" Disable vi-compatible mode
set hidden							" Switch buffers without saving
set nobackup						" Disable backup files
set noerrorbells					" Don't make noise on errors
set shortmess+=I					" Do not show welcome screen
set title							" Update window title

let mapleader=","					" Map the <Leader> key so plugins work properly

" }}}


" Color Settings {{{

if $TERM =~ "256color" || has('gui_running')
	colorscheme zenburn
else
	colorscheme darkdot
endif

" }}}


" GUI Settings {{{

if has("gui_running")
	set guioptions-=t				" Disable tear-off menus

	set guioptions-=m				" Disable menubar
	set guioptions-=T				" Disable toolbar

	set guioptions+=LlRrb
	set guioptions-=LlRrb			" Disable scrollbars

	set mousemodel=popup			" Enable right click menu

	" Window size
	set columns=100
	set lines=40
endif

" }}}


" Editing {{{

set backspace=indent,eol,start		" Make backspace key behave normally
set esckeys							" Allow use of arrow keys while in insert mode
set noinsertmode					" Don't stay in insert mode
set spell							" Enable spell checking

set cursorline						" Highlight current line
set number							" Show line numbers

set showmatch						" Highlight matching pairs
set matchpairs+=<:>					" Make < and > match

" }}}


" Indentation {{{

set autoindent						" Automatic indentation on new lines
set copyindent						" Copy existing indentation structure on autoindent
set preserveindent					" Preserve indentation structure for existing lines
set smartindent						" Smart indentation based on typed code
set smarttab						" Tabs based on shiftwidth, not tabstop
set cindent							" Automatically indent code

set noexpandtab						" Use real tab characters

" Tab width
set softtabstop=0
set tabstop=4
set shiftwidth=4

" }}}


" Folding {{{

if has('folding')
	set foldenable				" Enable folding
	set foldmethod=marker		" Fold on marker
	set foldopen-=search		" Do not open folds when searching
	set foldopen-=undo			" Do not open folds when using undo
	"set foldlevel=999			" Show folds at start
	set foldmarker={{{,}}}		" Use default fold marker
	set foldcolumn=0			" Do not use a fold column
endif

" }}}


" File Formats {{{

" Unicode support
set encoding=utf-8

" Support UNIX, DOS, and Mac line endings
set fileformats=unix,dos,mac

" Enable filetype auto-detection
filetype plugin on

" Enable filetype-specific indentation
filetype plugin indent on

" }}}


" Searching {{{

" Highlight
set hlsearch

" Ignore case unless token contains uppercase
set ignorecase
set smartcase

" }}}


" Syntax Highlighting {{{

" Syntax highlighting
syntax enable

" Highlight HTML code inside of PHP
let php_htmlInStrings=1

" Highlight MySQL queries inside of PHP
let php_sql_query=1

" }}}


" Plugins {{{

" NERDCommenter
set runtimepath+=$VIMHOME/plugin-git/nerdcommenter/

" NERDTree
set runtimepath+=$VIMHOME/plugin-git/nerdtree/
let g:NERDTreeChDirMode = 2
let g:NERDTreeHighlightCursorline = 0

" SnipMate
set runtimepath+=$VIMHOME/plugin-git/snipmate/
set runtimepath+=$VIMHOME/plugin-git/snipmate/after/
let g:snips_author ='mutantmonkey'
let g:snips_email = 'mutantmonkey@gmail.com'
let g:snippets_dir = "$HOME/.dotfiles/vim/snippets"

" Sparkup
autocmd FileType html source $VIMHOME/scripts/sparkup.vim

" }}}

